/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class MSceneUpdate : TBase
{
  private List<MSceneObject> _AddedSceneObjects;
  private List<MSceneObjectUpdate> _ChangedSceneObjects;
  private List<string> _RemovedSceneObjects;
  private List<MAvatar> _AddedAvatars;
  private List<MAvatarUpdate> _ChangedAvatars;
  private List<string> _RemovedAvatars;

  public List<MSceneObject> AddedSceneObjects
  {
    get
    {
      return _AddedSceneObjects;
    }
    set
    {
      __isset.AddedSceneObjects = true;
      this._AddedSceneObjects = value;
    }
  }

  public List<MSceneObjectUpdate> ChangedSceneObjects
  {
    get
    {
      return _ChangedSceneObjects;
    }
    set
    {
      __isset.ChangedSceneObjects = true;
      this._ChangedSceneObjects = value;
    }
  }

  public List<string> RemovedSceneObjects
  {
    get
    {
      return _RemovedSceneObjects;
    }
    set
    {
      __isset.RemovedSceneObjects = true;
      this._RemovedSceneObjects = value;
    }
  }

  public List<MAvatar> AddedAvatars
  {
    get
    {
      return _AddedAvatars;
    }
    set
    {
      __isset.AddedAvatars = true;
      this._AddedAvatars = value;
    }
  }

  public List<MAvatarUpdate> ChangedAvatars
  {
    get
    {
      return _ChangedAvatars;
    }
    set
    {
      __isset.ChangedAvatars = true;
      this._ChangedAvatars = value;
    }
  }

  public List<string> RemovedAvatars
  {
    get
    {
      return _RemovedAvatars;
    }
    set
    {
      __isset.RemovedAvatars = true;
      this._RemovedAvatars = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool AddedSceneObjects;
    public bool ChangedSceneObjects;
    public bool RemovedSceneObjects;
    public bool AddedAvatars;
    public bool ChangedAvatars;
    public bool RemovedAvatars;
  }

  public MSceneUpdate() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.List) {
              {
                AddedSceneObjects = new List<MSceneObject>();
                TList _list146 = iprot.ReadListBegin();
                for( int _i147 = 0; _i147 < _list146.Count; ++_i147)
                {
                  MSceneObject _elem148;
                  _elem148 = new MSceneObject();
                  _elem148.Read(iprot);
                  AddedSceneObjects.Add(_elem148);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.List) {
              {
                ChangedSceneObjects = new List<MSceneObjectUpdate>();
                TList _list149 = iprot.ReadListBegin();
                for( int _i150 = 0; _i150 < _list149.Count; ++_i150)
                {
                  MSceneObjectUpdate _elem151;
                  _elem151 = new MSceneObjectUpdate();
                  _elem151.Read(iprot);
                  ChangedSceneObjects.Add(_elem151);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.List) {
              {
                RemovedSceneObjects = new List<string>();
                TList _list152 = iprot.ReadListBegin();
                for( int _i153 = 0; _i153 < _list152.Count; ++_i153)
                {
                  string _elem154;
                  _elem154 = iprot.ReadString();
                  RemovedSceneObjects.Add(_elem154);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.List) {
              {
                AddedAvatars = new List<MAvatar>();
                TList _list155 = iprot.ReadListBegin();
                for( int _i156 = 0; _i156 < _list155.Count; ++_i156)
                {
                  MAvatar _elem157;
                  _elem157 = new MAvatar();
                  _elem157.Read(iprot);
                  AddedAvatars.Add(_elem157);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.List) {
              {
                ChangedAvatars = new List<MAvatarUpdate>();
                TList _list158 = iprot.ReadListBegin();
                for( int _i159 = 0; _i159 < _list158.Count; ++_i159)
                {
                  MAvatarUpdate _elem160;
                  _elem160 = new MAvatarUpdate();
                  _elem160.Read(iprot);
                  ChangedAvatars.Add(_elem160);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.List) {
              {
                RemovedAvatars = new List<string>();
                TList _list161 = iprot.ReadListBegin();
                for( int _i162 = 0; _i162 < _list161.Count; ++_i162)
                {
                  string _elem163;
                  _elem163 = iprot.ReadString();
                  RemovedAvatars.Add(_elem163);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("MSceneUpdate");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (AddedSceneObjects != null && __isset.AddedSceneObjects) {
        field.Name = "AddedSceneObjects";
        field.Type = TType.List;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, AddedSceneObjects.Count));
          foreach (MSceneObject _iter164 in AddedSceneObjects)
          {
            _iter164.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (ChangedSceneObjects != null && __isset.ChangedSceneObjects) {
        field.Name = "ChangedSceneObjects";
        field.Type = TType.List;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, ChangedSceneObjects.Count));
          foreach (MSceneObjectUpdate _iter165 in ChangedSceneObjects)
          {
            _iter165.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (RemovedSceneObjects != null && __isset.RemovedSceneObjects) {
        field.Name = "RemovedSceneObjects";
        field.Type = TType.List;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.String, RemovedSceneObjects.Count));
          foreach (string _iter166 in RemovedSceneObjects)
          {
            oprot.WriteString(_iter166);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (AddedAvatars != null && __isset.AddedAvatars) {
        field.Name = "AddedAvatars";
        field.Type = TType.List;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, AddedAvatars.Count));
          foreach (MAvatar _iter167 in AddedAvatars)
          {
            _iter167.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (ChangedAvatars != null && __isset.ChangedAvatars) {
        field.Name = "ChangedAvatars";
        field.Type = TType.List;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, ChangedAvatars.Count));
          foreach (MAvatarUpdate _iter168 in ChangedAvatars)
          {
            _iter168.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (RemovedAvatars != null && __isset.RemovedAvatars) {
        field.Name = "RemovedAvatars";
        field.Type = TType.List;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.String, RemovedAvatars.Count));
          foreach (string _iter169 in RemovedAvatars)
          {
            oprot.WriteString(_iter169);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("MSceneUpdate(");
    bool __first = true;
    if (AddedSceneObjects != null && __isset.AddedSceneObjects) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("AddedSceneObjects: ");
      __sb.Append(AddedSceneObjects);
    }
    if (ChangedSceneObjects != null && __isset.ChangedSceneObjects) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ChangedSceneObjects: ");
      __sb.Append(ChangedSceneObjects);
    }
    if (RemovedSceneObjects != null && __isset.RemovedSceneObjects) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("RemovedSceneObjects: ");
      __sb.Append(RemovedSceneObjects);
    }
    if (AddedAvatars != null && __isset.AddedAvatars) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("AddedAvatars: ");
      __sb.Append(AddedAvatars);
    }
    if (ChangedAvatars != null && __isset.ChangedAvatars) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ChangedAvatars: ");
      __sb.Append(ChangedAvatars);
    }
    if (RemovedAvatars != null && __isset.RemovedAvatars) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("RemovedAvatars: ");
      __sb.Append(RemovedAvatars);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

