/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace MMIStandard
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class MAvatarPostureValues : TBase
  {
    private List<MJointType> _PartialJointList;

    public string AvatarID { get; set; }

    public List<double> PostureData { get; set; }

    public List<MJointType> PartialJointList
    {
      get
      {
        return _PartialJointList;
      }
      set
      {
        __isset.PartialJointList = true;
        this._PartialJointList = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool PartialJointList;
    }

    public MAvatarPostureValues() {
    }

    public MAvatarPostureValues(string AvatarID, List<double> PostureData) : this() {
      this.AvatarID = AvatarID;
      this.PostureData = PostureData;
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        bool isset_AvatarID = false;
        bool isset_PostureData = false;
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                AvatarID = iprot.ReadString();
                isset_AvatarID = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.List) {
                {
                  PostureData = new List<double>();
                  TList _list0 = iprot.ReadListBegin();
                  for( int _i1 = 0; _i1 < _list0.Count; ++_i1)
                  {
                    double _elem2;
                    _elem2 = iprot.ReadDouble();
                    PostureData.Add(_elem2);
                  }
                  iprot.ReadListEnd();
                }
                isset_PostureData = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.List) {
                {
                  PartialJointList = new List<MJointType>();
                  TList _list3 = iprot.ReadListBegin();
                  for( int _i4 = 0; _i4 < _list3.Count; ++_i4)
                  {
                    MJointType _elem5;
                    _elem5 = (MJointType)iprot.ReadI32();
                    PartialJointList.Add(_elem5);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
        if (!isset_AvatarID)
          throw new TProtocolException(TProtocolException.INVALID_DATA, "required field AvatarID not set");
        if (!isset_PostureData)
          throw new TProtocolException(TProtocolException.INVALID_DATA, "required field PostureData not set");
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("MAvatarPostureValues");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (AvatarID == null)
          throw new TProtocolException(TProtocolException.INVALID_DATA, "required field AvatarID not set");
        field.Name = "AvatarID";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(AvatarID);
        oprot.WriteFieldEnd();
        if (PostureData == null)
          throw new TProtocolException(TProtocolException.INVALID_DATA, "required field PostureData not set");
        field.Name = "PostureData";
        field.Type = TType.List;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Double, PostureData.Count));
          foreach (double _iter6 in PostureData)
          {
            oprot.WriteDouble(_iter6);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
        if (PartialJointList != null && __isset.PartialJointList) {
          field.Name = "PartialJointList";
          field.Type = TType.List;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.I32, PartialJointList.Count));
            foreach (MJointType _iter7 in PartialJointList)
            {
              oprot.WriteI32((int)_iter7);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("MAvatarPostureValues(");
      __sb.Append(", AvatarID: ");
      __sb.Append(AvatarID);
      __sb.Append(", PostureData: ");
      __sb.Append(PostureData);
      if (PartialJointList != null && __isset.PartialJointList) {
        __sb.Append(", PartialJointList: ");
        __sb.Append(PartialJointList);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
